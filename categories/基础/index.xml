<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on 平凡世界</title>
    <link>http://www.itech.red/categories/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on 平凡世界</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Aug 2016 16:51:34 +0800</lastBuildDate>
    
	<atom:link href="http://www.itech.red/categories/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解UML类图关系</title>
      <link>http://www.itech.red/2016/08/%E7%90%86%E8%A7%A3uml%E7%B1%BB%E5%9B%BE%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Fri, 26 Aug 2016 16:51:34 +0800</pubDate>
      
      <guid>http://www.itech.red/2016/08/%E7%90%86%E8%A7%A3uml%E7%B1%BB%E5%9B%BE%E5%85%B3%E7%B3%BB/</guid>
      <description>理解UML类图关系
1、依赖(Dependency)
 关系：uses temporarily，使用关系，作为局部变量、方法参数或者对静态方法的调用 代码示例：
import B; public class A{ public void method1(B b) { // ... } public void method2() { B tempB = new B(); // ... } }  图示(一套带箭头的虚线表示)：
  2、聚合(Aggregation)
 关系：is part of，整体与部分的关系，作为成员变量 代码：
import Engine; public class Car{ private Engine engine; publilc Engine getEngine(){ return engine; } }  图示(一条带空心菱形箭头的直线表示)：
  3、组合(Composition)
 关系：is entirely made of，更强的整体与部分关系，作为成员变量 代码:
import Page; public class Book{ private List&amp;lt;Page&amp;gt; pages; publilc List&amp;lt;Page&amp;gt; getPages(){ return pages; } }  图示(一条带实心菱形箭头直线表示):</description>
    </item>
    
  </channel>
</rss>